
val rec map = fun f -> fun l ->
    match l with
        | [] -> []
        | x::xs -> f x :: (map f xs)


val head = fun l ->
    match l with
        | [] -> 0
        | x::_ -> x

val tail = fun l ->
    match l with
        | [] -> []
        | _::xs -> xs

val rec map2 = fun f -> fun a -> fun b ->
    match (a, b) with
        | ([], []) -> []
        | ((a::as), (b::bs)) -> f a b :: (map2 f as bs)
        | _ -> []

val rec mapn = fun f -> fun lists ->
  match lists with
    | []::others -> []
    | _ -> (f (map head lists)) :: (mapn f (map tail lists))

