val rec quick = fun ts -> fun sorted ->
    match ts with
        | [] -> sorted
        | [x]  -> x :: sorted
        | (x :: xs) -> (
            let rec part = fun l -> fun r -> fun u ->
                match u with
                    | [] -> quick l (x :: (quick r sorted))
                    | (y::ys) -> (
                        if ((y < x) || (y = x)) then
                            part (y::l) r ys
                        else
                            part l (y::r) ys
                    )
            in
            part [] [] xs
        )

val quicksort = fun l -> quick l []

val x = [80;12;3;44;12;97;91;43;9;19;93;70;11;31;23;47;43;61;28;77;63;76;49;16;49;11;0;2;27;98;79;74;98;47;82;40;0;70;5;30;38;49;15;76;52;16;95;59;28;54;64;96;30;80;71;24;40;83;51;63;18;58;28;19;32;44;84;96;65;9;80;50;94;11;44;38;31;80;24;60;27;44;31;39;7;59;73;2;22;43;13;10;46;21;32;60;22;96;29;19;22;47;49;98;35;47;57;68;25;21;68;70;94;66;82;45;19;23;14;10;64;57;17;20;64;7;9;2;33;39;88;24;64;15;91;77;24;95;84;54;22;61;6;60;95;26;42;36;79;59;48;41;97;25;63;30;11;41;14;45;64;64;28;10;60;34;38;52;27;53;56;98;88;66;23;17;32;70;70;41;57;69;41;54;92;88;27;0;57;39;67;95;64;96;82;5;28;49;100;15;9;67;69;45;95;10;32;20;89;70;99;92;75;27;47;90;56;75;72;3;71;15;4;23;91;22;63;39;98;91;99;78;80;10;42;43;65;76;87;56;84;62;28;78;78;18;4;61;30;90;1;12;9;32;65;16;1;51;78;55;6;85;32;14;12;62;89;91;10;59;100;42;34;34;52;80;56;99;50;38;78;87;51;20;77;64;8;30;64;43;26;30;92;84;17;42;88;37;27;32;42;43;7;88;9;85;71;53;38;19;53;81;8;77;1;51;89;17;18;71;21;2;4;5;69;20;15;87;19;5;61;50;80;99;81;98;27;52;55;15;14;0;79;91;87;88;30;55;26;94;37;44;90;93;42;74;23;8;31;12;54;42;0;15;71;36;24;7;87;94;46;15;58;17;21;6;46;33;92;45;12;72;65;96;75;3;74;71;93;56;95;35;7;68;6;47;49;12;40;61;9;21;74;67;80;44;11;88;87;95;74;64;99;89;79;76;42;12;59;9;41;44;68;0;88;33;55;95;76;84;1;34;17;57;82;33;70;19;64;64;17;34;20;55;63;99;15;57;79;48;31;14;69;3;38;39;86;23;19;70;65;7;69;35;63;34;53;75;78;89;90;34;15;62;33;95;29;17;6;45;0;33;96;81;19;22;0;13;90;83;32;79;80;21;14;81;32;35;8;64;64;90;43;5;12;87;51;56;83;38;39;96;54;17;10;84;32;86;31;11;55;79;46;6;28;36;18;1;65;57;98;100;7;90;8;94;71;50;40;57;47;28;36;26;19;52;30;55;69;59;5;85;68;57;9;52;47;36;17;42;82;38;89;4;73;94;70;64;2;47;3;88;53;33;51;35;48;41;63;0;8;29;69;38;10;78;45;83;23;30;84;47;21;47;81;53;10;66;94;37;47;70;38;10;0;19;47;46;8;30;83;27;67;32;70;84;13;24;78;45;21;96;7;74;23;41;69;72;70;31;9;63;54;82;40;8;93;80;53;32;34;68;5;74;46;50;81;51;30;26;26;84;14;96;18;24;33;47;30;36;19;42;94;25;11;46;43;82;96;36;72;82;16;10;91;43;1;27;41;30;0;18;17;57;13;92;50;17;39;47;40;94;49;77;75;41;9;33;26;50;52;96;7;68;66;95;40;76;45;43;85;54;43;98;66;0;6;1;37;0;89;55;33;31;21;66;51;56;9;80;78;28;53;40;26;11;37;20;34;54;76;49;24;15;40;50;90;49;0;87;32;57;16;95;6;39;82;28;19;69;60;85;86;7;2;9;32;40;43;31;99;19;20;12;28;55;79;28;10;7;48;82;13;99;79;72;99;22;22;72;29;40;65;45;8;17;90;37;96;51;80;55;22;23;3;37;46;61;27;6;28;74;93;97;5;8;14;84;21;43;74;48;66;24;30;61;51;1;59;51;53;17;99;8;2;86;10;33;97;43;82;72;50;85;84;88;44;19;93;4;79;3;35;21;0;53;69;53;40;87;8;5;18;39;96;90;57;98;94;94;39;39;96;45;11;87;95;96;85;91;24;57;91;91;69;55;91;89;18;4;2;56;12;53;89;67;40;73;18;66;40;67;11;6;65;68;93;71;75;57;65;61;23;100;64;56;55;40;44;5;81;88;43;23;3;98;96;39;73;63;90;28;47;93;40;44;89;73;43;48;76;60;70;30;8;55;90;69;30;29;9;25;20;91;17;20;86;41;6;75;78;15;15;7;73;25;60;36;46;31;65;65;57;45;43;49;3;75;63;75;65;57;89;80;99;28;30;85;63;55;29;40;74;51;83;61;49;44;13;87;96;42;73;96;71;66;25;56;37;31;20;16;51;14;0;92;28;33;59;13;75;62;6;38;87;11;8;10;73;28;17;65;7;79;32;6;60;12;66;29;13;14;16;15;81;6;11;32;90;36;67;12;18;99;54;90;50;3;82;50;96;38;99;33;83;9;21;31;87;69;20;86;31;77;100;37;51;13;65;71;93;71;91;69;39;94;41;19;71;16;14;34;26;42;11;86;79;28;84;90;85;34;63;57;3;83;95;99;19;7;27;80]

val doit_once = fun dead ->
    quicksort x

val doit = fun size ->
    let rec loop n =
        if n = 0 then ()
        else do {
            doit_once ();
            loop (n - 1)
        }
    in
    loop size

val testit dead = print(doit_once x)